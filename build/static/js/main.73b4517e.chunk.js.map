{"version":3,"sources":["components/SideNav.js","components/Home.js","components/VisTeams.js","components/DashTutorial.js","components/TrackerTutorial.js","components/Explore.js","components/SignUp.js","components/Login.js","components/UserChart.js","components/Load.js","components/DashTable.js","components/InspectPanel.js","components/Dashboard.js","components/NewTracker.js","App.js","reducers/index.js","reducers/userReducer.js","actions/types.js","reducers/dataReducer.js","store.js","index.js"],"names":["Styles","styled","div","withRouter","connect","state","isLoggedIn","userReducer","dispatch","logOut","type","props","Row","className","href","ListGroup","Item","onClick","e","preventDefault","history","push","Home","Col","xs","Image","src","DashTutorial","TrackerTutorial","Explore","view","renderTutorial","changeView","value","setState","flush","this","React","Component","SignUp","first_name","last_name","email","password","location","role","setFirstName","setLastName","setEmail","setPassword","setLocation","setRole","parseInt","submitUserSignup","user","fetch","method","headers","body","JSON","stringify","then","res","json","createUser","localStorage","setItem","id","console","log","current_user","Card","Form","onSubmit","Group","controlId","InputGroup","Prepend","Text","Control","placeholder","onChange","target","Label","Button","Login","onLogin","sendLogin","variant","UserChart","decideOnChart","options","legend","show","labels","categories","theme","mode","palette","plotOptions","bar","distributed","chart","title","stroke","curve","xaxis","quick","text","series","data","width","height","inspect","dataLabels","enabled","chartOptions","noData","floating","fontSize","position","offsetX","offsetY","useSeriesColors","radialBar","name","color","Container","chartType","inspectedDataset","dataReducer","Load","Spinner","animation","DashTable","makeTableRows","reverse","map","entry","moveToInspect","dataset_series","length","notes","Table","striped","bordered","hover","datasets","users","dataset","InspectPanel","subject","content","handleInput","renderNotes","note","num","set","names","points","dataId","user_id","dataset_id","newNote","chart_type","filter","createNote","size","Dashboard","inspected","renderInspected","renderQuickView","Body","filteredData","fetchDatasets","style","marginLeft","marginRight","NewTracker","seriesInputs","Xaxis","colors","file","keys","showChart","handleWidthChange","chartModeSwitch","setCurve","string","handleFileUpload","Papa","parse","files","dynamicTyping","header","complete","results","Object","paletteChange","choice","handleClose","pickUserKeys","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","key","Check","multiple","label","categoriesFromFile","chartFromFile","Footer","slice","cats","index","handleTitle","submitTrackerForm","obj","addDataset","handleChartTypeChange","setTimeout","renderFormUI","el","i","as","removeEl","splice","addClick","class","for","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","charAt","toUpperCase","defaultValue","App","showNav","getUsers","userData","fetchUsers","getDataSets","getItem","setLoggedIn","paddingRight","paddingLeft","exact","path","VisTeams","combineReducers","action","clear","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73b4517e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {withRouter} from 'react-router-dom'\nimport {Row, ListGroup} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n\nconst Styles = styled.div`\nborder: rgb(42, 157, 244, 0.25) solid 1px;\nheight: 100vh;\ntext-align: center;\nalign-items: center;\njustify-content: center;\nbackground: rgb(42, 157, 244);\n.brand {\n    color: #f7f7f7;\n    text-decoration: none;\n    font-size: 4rem;\n    margin-top: 5vh;\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n.group {\n    margin-top: 5vh;\n}\n\n.item {\n    color:white;\n    margin-top: 5vh;\n    background: rgb(0, 0, 0, 0.05);\n    border: rgb(42, 157, 244, 0.5) solid 1px;\n    &:hover {\n        background: #ff5733;\n        transition: 0.3s;\n    }\n\n}\na {\n    color: #f7f7f7;\n}\n`\n\nconst SideNav = (props) => {\n    return (\n        <Styles>\n            <Row className='side-brand'>\n                <a href='/' className='brand'>VisTrack</a>\n            </Row>\n            <ListGroup className='group'>\n                {/* <ListGroup.Item className='item'>\n                    <a href='/explore'>Explore</a>\n                </ListGroup.Item> */}\n                {\n                    props.isLoggedIn ?\n                    <>\n                    <ListGroup.Item className='item'>\n                    <a href='/dashboard'>Dashboard</a>\n                </ListGroup.Item>\n                {/* <ListGroup.Item className='item'>\n                    <a href='/'>My Tracks</a>\n                </ListGroup.Item> */}\n                <ListGroup.Item className='item'>\n                    <a href='/newtracker'>Create a New Tracker</a>\n                </ListGroup.Item>\n                </> :\n                ''\n                }\n                {/* <ListGroup.Item className='item'>\n                    <a href='/visteams'>VisTeams</a>\n                </ListGroup.Item> */}\n                \n                {props.isLoggedIn ?\n                <ListGroup.Item className='item'>\n                    <a href='/'\n                    onClick={(e) => {\n                        e.preventDefault()\n                        props.logOut()\n                        props.history.push('/')\n                    }}>Logout</a>\n                </ListGroup.Item>\n                    :\n                <>\n                <ListGroup.Item className='item'>\n                    <a href='/login'>Log In</a>\n                </ListGroup.Item>                \n                {/* <ListGroup.Item className='item'>\n                    <a href='/signup'>Sign Up</a>\n                </ListGroup.Item> */}\n                </>\n                }\n                \n            </ListGroup>\n        </Styles>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.userReducer.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logOut: () => dispatch({type: 'LOGOUT'})\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SideNav))\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Row, Col, Image} from 'react-bootstrap'\nimport {FaChartBar, FaSlidersH, FaSave} from 'react-icons/fa'\n\nconst Styles = styled.div`\n    background: url('https://bit.ly/2ZaEFd9');\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n    z-index: 0;\n\n    span {\n        color: #02c39a;\n    }\n    .home-row {\n        height: 75%;\n    }\n    .graph-icon {\n        margin-top: 1vh;\n        font-size: 7rem;\n        color:#02c39a;\n        margin-left: auto;\n        margin-right:auto;\n    }\n    .branding-row {\n        margin-left: 0;\n        height: 25%;\n        text-align:center;\n    }\n    .lower-brand-text {\n        color: #f7f7f7;\n        text-align:center;\n        margin-left:auto;\n        margin-right:auto;\n    }\n    .container-home {\n        overflow: hidden;\n        z-index: 2;\n        background:rgb(42, 157, 244, 0.3);\n        height: 100vh;\n        width: 100%;\n    }\n    .brand-p {\n        color: #f7f7f7;\n        text-align: center;\n        margin-right: 11vw;\n        margin-top: 5vh;\n    }\n    .img {\n        height: 350px;\n        margin-top: 10vh;\n    }\n    .title-white { \n        color: #02c39a;\n        font-size: 5rem;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 10vh;\n    }\n`\n\nconst Home = props => {\n    return (\n        <Styles>\n            <div className='container-home'>\n                <Row className='home-row'>\n                    <Col xs={2} />\n                    <Col xs={4}>\n                        <h1 className='title-white'>VisTrack</h1>\n                        <h6 className='brand-p'>\n                            Data Management made <span>Simple</span> and <span>Engaging</span>\n                        </h6>\n                        <p className='brand-p'>\n                            Upload your CSV file and get\n                            instant Data Visualizations\n                        </p>\n                        <p className='brand-p'>\n                            Personalize and Export your Trackers\n                        </p>\n                    </Col>\n                    <Col xs={4}>\n                        <Image\n                        className=\"img\"\n                        src='https://screenshots.codesandbox.io/8xstw.png' />\n                    </Col>\n                    <Col xs={2} />\n\n                </Row>\n                \n            </div>\n        </Styles>\n    )\n}\n\nexport default Home","import React from 'react'\nimport styled from 'styled-components'\nimport {withRouter} from 'react-router-dom'\nimport {Row, ListGroup, Container, Jumbotron} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n\nconst Styles = styled.div`\n.jumbo {\n    background: url(https://bit.ly/2NrvjD2);\n    height: 50vh;\n    width: 100%;\n    margin-left: 0;\n    border-bottom: #02c39a solid 5px;\n}\n.contain {\n    background: rgba(0,0,0,0.4);\n    height: 100%;\n    width: 100%;\n    color: white;\n    text-align: center;\n}\n`\n\nconst SideNav = (props) => {\n    return (\n        <Styles>\n            <Row className='jumbo'>\n                <div className='contain'>\n                    <h1>VisTeams</h1>\n                    <h4>Invite other users to view and manage your data.</h4>\n                    </div>\n                </Row>\n        </Styles>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.userReducer.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logOut: () => dispatch({type: 'LOGOUT'})\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SideNav))","import React from 'react'\nimport styled from 'styled-components'\nimport {Row, Col} from 'react-apexcharts'\nimport {} from 'react-icons/fa'\n\nconst DashTutorial = (props) => {\n    return (\n        <div>Dash Tutorial</div>\n    )\n}\n\nexport default DashTutorial","import React from 'react'\n\nconst TrackerTutorial = (props) => {\n    return (\n        <div>Tracker Tutorial</div>\n    )\n}\n\nexport default TrackerTutorial","import React from 'react'\nimport {connect} from 'react-redux'\nimport styled from 'styled-components'\nimport DashTutorial from './DashTutorial'\nimport TrackerTutorial from './TrackerTutorial'\nimport {Row, Col, ListGroup } from 'react-bootstrap'\n\nconst Styles = styled.div`\n    background: url(https://bit.ly/2NrvjD2);\n    height: 100vh;\n    .welcome-banner {\n        width: 100%;\n        height: 100%;\n        background: rgb(0,0,0,0.7);\n        text-align: center;\n        animation: fade 2s linear;\n    }\n    .welcome-primary {\n        color: #f7f7f7;\n        font-size: 2.5rem;\n        margin-top: 2vh;\n    }\n    .welcome-accent {\n        color: #02c39a;\n        font-size: 2.5rem;\n    }\n    .welcome-text {\n        color: white;\n    }\n    .jumbo {\n        background: url(https://bit.ly/2D8JT0g);\n        height: 15vh;\n        width:100%;\n        margin-left: 0;\n    }\n    .container-explore {\n        background: rgb(0,0,0,0.4);\n        height: 100vh;\n        width: 100%;\n        color:white;\n    }\n    @keyframes fade {\n        from {background-color: rgb(0,0,0, 0.0);}\n        to {background-color: rgb(0,0,0, 0.7);}\n    }\n    .bg-over {\n        background: rgb(0,0,0,0.4);\n        width: 100%;\n        height: 85vh;\n        margin-top: 0;\n        position: absolute;\n        top:15vh;\n        left:0;\n    }\n    .img {\n        max-height: 50px;\n        margin-left: 0;\n    }\n    .list-row {\n        margin-left: 0;\n        height: 100%;\n        width: 100%;\n    }\n    .item {\n        cursor: pointer;\n        background: rgb(0,0,0,0);\n        color: #f7f7f7;\n        border: none;\n        border-bottom: #02c39a solid 1px;\n        &:hover {\n            background: #02c39a;\n            transition: 0.3s;\n        }\n    }\n    .list-group1 {\n        margin-top: 50%;\n    }\n    .list-col {\n        height: 100%;\n        border-right: white solid 1px;\n    }\n`\n\nclass Explore extends React.Component {\n    state ={\n        view: 0\n    }\n\n    renderTutorial = () => {\n        return  this.state.view === 0 ?\n            <DashTutorial/>   :\n            <TrackerTutorial/>\n    }\n    changeView = (value) => {\n        this.setState({\n            view: value\n        })\n    }\n\n    render() {\n        return (\n            <Styles>\n                <Row className='jumbo'>\n                    <div className='welcome-banner'>\n                        \n                        <h2 className='welcome-primary'>Welcome To <span className='welcome-accent'>VisTrack</span></h2>\n                        {/* <div className='animate-line'></div> */}\n                        <h6 className='welcome-text'>First Time Here? Let's go over the basics of Using VisTrack.</h6>\n                        </div>\n                </Row>\n                \n                <div className='bg-over'>\n                    <Row className='list-row'>\n                        <Col \n                        className='list-col'\n                        xs={2}>\n                            <ListGroup \n                            flush\n                            className='list-group1'>\n                                <ListGroup.Item \n                                onClick={() => this.changeView(0)}\n                                className='item'>The DashBoard</ListGroup.Item>\n                                <ListGroup.Item \n                                onClick={() => this.changeView(1)}\n                                className='item'>Creating a Tracker</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col xs={10}>\n                            {this.renderTutorial()}\n                        </Col>\n                    </Row>\n                \n                </div>\n            </Styles>\n        )\n    }\n}\n\nexport default connect()(Explore)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Button, Card,Row, Col, InputGroup} from 'react-bootstrap'\nimport {FaLock, FaEnvelope, FaUser} from 'react-icons/fa'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nconst Styles = styled.div`\n    background: url(https://bit.ly/2NrvjD2);\n    height: 100%;\n    .icon {\n        color: #444;\n    }\n    .contain {\n        background: rgba(0,0,0,0.4);\n        height: 100%;\n        margin-top: 0;\n        align-items: center;\n        display: block;\n        overflow: hidden;\n    }\n    .login-form {\n        margin-top: 0vh;\n        text-align: center;\n        font-size: 1.4rem;\n    }\n    .email, .pass {\n        color: #444;\n        max-width: 60%;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .user-input {\n        color: #444;\n        border: none;\n        border-radius: 0;\n        border-bottom: #888 solid 1px;\n        &:hover {\n            transition: 0.3s;\n            border: none;\n        }\n}    \n    .form-card {\n        box-shadow: 0px 0px 50px rgb(0,0,0,0.5);\n        background: #ebf3f7;\n        margin-top: 15vh;\n        width: 50%;\n        height: 75vh;\n        margin-right: auto;\n        margin-left: auto;\n    }\n    .prepend {\n        background :#ebf3f7;\n        border: none;\n    }\n    .form-header {\n        margin-right: auto;\n        margin-left: auto;\n        margin-top: 3vh;\n        font-size: 3rem;\n        color: #444;\n    }\n    }\n    .form-header2 {\n        margin-right: auto;\n        margin-left: auto;\n        margin-top: 1vh;\n        font-size: 1.5rem;\n        color: #444;\n    }\n    }\n    .prepend-text {\n        border: none;\n        border-radius: 0 0 0 10px;\n        background: #ebf3f7;\n        border-bottom: #888 solid 1px;\n    }\n    .sub-btn {\n        color: #f7f7f7;\n        background: rgb(42, 157, 244);\n        width: 40%;\n        border: none;\n        &:hover {\n            background: rgb(2, 195, 154, 0.4);\n            color: #444;\n            transition: 0.3s;\n        }\n    }\n\n`\nclass SignUp extends React.Component {\n\n    state={\n        first_name:'',\n        last_name:'',\n        email:'',\n        password:'',\n        location:'',\n        role:'',\n    }\n    setFirstName = (value) => {\n        this.setState({first_name: value})\n    }\n    setLastName = (value) => {\n        this.setState({last_name: value})\n    }\n    setEmail = (value) => {\n        this.setState({email: value})\n    }\n    setPassword = (value) => {\n        this.setState({password: value})\n    }\n    setLocation = (value) => {\n        this.setState({location: value})\n    }\n    setRole = (value) => {\n        this.setState({role: parseInt(value)})\n    }\n    submitUserSignup = user => {\n        fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({user: user})\n        })\n        .then(res => res.json())\n        .then(user => {\n            debugger\n            this.props.createUser(user)\n            localStorage.setItem('user', user.user.id)\n            console.log(this.props.current_user)\n            this.props.history.push('/dashboard')\n        })\n    }\n\n    render() {\n        return (\n            <Styles>\n                <div className='contain'>\n                <Card className='form-card'>\n                    \n                <p className='form-header'>Sign Up</p>\n                    <p className='form-header2'>Welcome to VisTrack</p>\n                <Form\n                className='login-form'\n                onSubmit={(e) => {\n                e.preventDefault()\n                this.submitUserSignup(this.state)}}>\n                <Form.Group className='email' controlId=\"formGridFirstName\">\n                \n                <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaUser className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control\n                placeholder='First Name'\n                className='user-input'\n                value={this.state.first_name}\n                onChange={e => this.setFirstName(e.target.value)}\n                type=\"text\" />\n                </InputGroup>\n                </Form.Group>\n\n                <Form.Group className='email' controlId=\"formGridLastName\">\n                <Form.Label></Form.Label>\n                <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaUser className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control\n                placeholder='Last Name'\n                className='user-input'\n                value={this.state.last_name}\n                onChange={e => this.setLastName(e.target.value)}\n                type=\"text\"  />\n                </InputGroup>\n            </Form.Group>\n                <Form.Group className='email' controlId=\"formGridEmail\">\n                <Form.Label></Form.Label>\n                <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaEnvelope className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control\n                placeholder='Email'\n                className='user-input'\n                value={this.state.email}\n                onChange={e => this.setEmail(e.target.value)}\n                type=\"text\" />\n                </InputGroup>\n                </Form.Group>\n\n                <Form.Group className='email' controlId=\"formGridPassword\">\n                <Form.Label></Form.Label>\n                <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaLock className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control\n                placeholder='Password'\n                className='user-input'\n                value={this.state.password}\n                onChange={e => this.setPassword(e.target.value)}\n                type=\"password\" />\n                </InputGroup>\n            </Form.Group>\n            <Button className='sub-btn' type=\"submit\">\n            Submit\n            </Button>\n            \n        </Form>\n                </Card>\n                </div>\n            </Styles>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createUser: (user) => dispatch({type: 'CREATE_USER', user: user})\n    }\n\n}\nconst mapStateToProps = state => {\n    return {\n        current_user: state.userReducer.current_user\n    }\n    \n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp))","import React from 'react'\nimport { Form, Button, Card, InputGroup} from 'react-bootstrap'\nimport {FaLock, FaEnvelope} from 'react-icons/fa'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nconst Styles = styled.div`\n    background: url(https://bit.ly/2NrvjD2);\n    height: 100%;\n    .icon {\n        color: #444;\n    }\n    .contain {\n        background: rgba(0,0,0,0.4);\n        height: 100%;\n        margin-top: 0;\n        align-items: center;\n        display: block;\n        overflow: hidden;\n    }\n    .login-form {\n        margin-top: 0vh;\n        text-align: center;\n        font-size: 1.4rem;\n    }\n    .email, .pass {\n        color: #444;\n        max-width: 60%;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .user-input {\n        color: #444;\n        border: none;\n        border-radius: 0;\n        border-bottom: #888 solid 1px;\n        &:hover {\n            transition: 0.3s;\n        }\n}    \n    .form-card {\n        box-shadow: 0px 0px 50px rgb(0,0,0,0.5);\n        background: #ebf3f7;\n        margin-top: 15vh;\n        width: 50%;\n        height: 50vh;\n        margin-right: auto;\n        margin-left: auto;\n    }\n    .prepend {\n        background :#ebf3f7;\n        border: none;\n    }\n    .form-header {\n        margin-right: auto;\n        margin-left: auto;\n        margin-top: 3vh;\n        font-size: 3rem;\n        color: #444;\n    }\n    }\n    .form-header2 {\n        margin-right: auto;\n        margin-left: auto;\n        margin-top: 1vh;\n        font-size: 1.5rem;\n        color: #444;\n    }\n    }\n    .prepend-text {\n        border: none;\n        border-radius: 0 0 0 10px;\n        background: #ebf3f7;\n        border-bottom: #888 solid 1px;\n    }\n    .sub-btn {\n        color: #f7f7f7;\n        background: rgb(42, 157, 244);\n        width: 40%;\n        border: none;\n        &:hover {\n            background: rgb(2, 195, 154, 0.4);\n            color: #444;\n            transition: 0.3s;\n        }\n    }\n\n`\n\nclass Login extends React.Component {\n\n    state={\n        email: '',\n        password: '',\n    }\n\n    setEmail = (value) => {\n        this.setState({email: value})\n    }\n    setPassword = (value) => {\n        this.setState({password: value})\n    }\n    onLogin = (user) => {\n        fetch('http://localhost:3000/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({user: user})\n        })\n        .then(res => res.json())\n        .then(user => {\n            localStorage.setItem('user', `${user.user.id}` )\n            this.props.sendLogin(user.user)\n            this.props.history.push('/dashboard')\n        })\n    }\n\n\n    render() {\n        return (\n            <Styles>\n                <div className='contain'>\n                    <Card className='form-card'>\n                    <p className='form-header'>Sign In</p>\n                    <p className='form-header2'>Welcome back to VisTrack</p>\n                    <Form\n                className='login-form'\n            onSubmit={e => {\n                e.preventDefault()\n                this.onLogin(this.state)\n            }}\n            >\n                <Form.Group \n                className='email'\n                controlId=\"formBasicEmail\">\n                    <Form.Label></Form.Label>\n                    <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaEnvelope className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                    className='user-input'\n                    value={this.state.email}\n                    onChange={e => this.setEmail(e.target.value)}\n                    type=\"email\" \n                    placeholder=\"Enter email\" />\n                    </InputGroup>\n\n                </Form.Group>\n\n                <Form.Group \n                className='pass'\n                controlId=\"formBasicPassword\">\n                    <Form.Label></Form.Label>\n                    <InputGroup>\n                    <InputGroup.Prepend className='prepend'> \n                    <InputGroup.Text className='prepend-text'><FaLock className='icon'/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                    className='user-input'\n                    value={this.state.password}\n                    onChange={e => this.setPassword(e.target.value)}\n                    type=\"password\" placeholder=\"Password\" />\n                    </InputGroup>\n                </Form.Group>\n                <Button \n                className='sub-btn'\n                variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n                <p className='card-form-text'>Don't have an account? <a href='/signup'>Sign Up!</a></p>\n            </Form>\n                    </Card>\n                </div>\n            </Styles>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sendLogin: (user) => dispatch({type: 'LOGIN', user: user})\n    } \n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login))","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Container } from 'react-bootstrap'\nimport Chart from \"react-apexcharts\";\n\n// import {\n//   LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n// } from 'recharts'\n\nclass UserChart extends React.Component {\n  decideOnChart=(type) => {\n    if(type === 'bar') {\n      return (\n        <Chart\n        options={{\n          legend: {\n            show:false\n          },\n          \n          labels: [...this.props.categories],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          plotOptions: {\n            \n          \n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: 'straight',\n          },\n          xaxis: {\n            categories: this.props.categories,\n            labels: {\n              show: this.props.quick ? false : true\n            }\n          },\n          labels: this.props.type === 'pie' ? this.props.categories : [],\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          \n        }}\n        \n        series={[{\n          data: this.props.data\n        }]}\n        type='bar'\n        width={'100%'}\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type === 'line') {\n      return (\n        <Chart\n        options={{\n          \n          labels: [...this.props.categories],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: this.props.curve,\n            width: this.props.width\n          },\n          xaxis: {\n            categories: this.props.categories\n          },\n          labels: this.props.type === 'pie' ? this.props.categories : [],\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          \n        }}\n        series={[{\n          data: this.props.data\n        }]}\n        type='line'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type === 'area') {\n      return (\n        <Chart\n        options={{\n          dataLabels: {\n            enabled: this.props.quick ? false : true\n          },\n          labels: [...this.props.categories],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: this.props.curve,\n            width: this.props.width\n          },\n          xaxis: {\n            categories: this.props.categories\n          },\n          labels: this.props.type === 'pie' ? this.props.categories : [],\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          \n        }}\n        series={[{\n          data: this.props.data\n        }]}\n        type='area'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type === 'radar') {\n      return (\n        <Chart\n        options={{\n          \n          labels: [...this.props.categories],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: 'straight',\n          },\n          xaxis: {\n            categories: this.props.categories\n          },\n          labels: this.props.type === 'pie' ? this.props.categories : [],\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          \n        }}\n        series={[{\n          data: this.props.data\n        }]}\n        type='radar'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type ==='candlestick') {\n      return (\n        <Chart\n        options={{\n          dataLabels: {\n            enabled: this.props.quick ? false : true\n          },\n          labels: [...this.props.categories],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: 'straight',\n          },\n          xaxis: {\n            categories: this.props.categories\n          },\n          labels: this.props.type === 'pie' ? this.props.categories : [],\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          \n        }}\n        series={[{\n          data: this.props.data\n        }]}\n        type='candlestick'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type ==='donut') {\n      return (\n        <Chart\n        options={{\n          dataLabels: {\n            enabled: this.props.quick ? false : true\n          },\n          chartOptions: {labels: [...this.props.categories]},\n          series: [...this.props.data],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: 'straight',\n          },\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          labels: this.props.categories,\n        }}\n        \n        \n        \n        series={this.props.data}\n        type='donut'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type === 'pie') {\n      return (\n        <Chart\n        options={{\n          dataLabels: {\n            enabled: this.props.quick ? false : true\n          },\n          chartOptions: {labels: [...this.props.categories]},\n          series: [...this.props.data],\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.title\n          },\n          stroke: {\n            curve: 'straight',\n          },\n          noData: {\n            text: 'Add Data Points to Get Started!'\n          },\n          labels: this.props.categories,\n        }}\n        \n        \n        \n        series={this.props.data}\n        type='pie'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    } else if (type === 'radialBar') {\n      return (\n        <Chart\n        options= {{\n          legend: {\n            show: true,\n            floating: true,\n            fontSize: '16px',\n            position: 'left',\n            offsetX: 160,\n            offsetY: 15,\n            labels: {\n              useSeriesColors: true,\n          }},\n          theme: {\n            mode: this.props.mode,\n            palette: this.props.palette,\n          },\n          chart: {\n            height: 350,\n            type: 'radialBar',\n          },\n          plotOptions: {\n            radialBar: {\n              dataLabels: {\n                enabled: this.props.quick ? false : true,\n                name: {\n                  fontSize: '22px',\n                  color: '#444444'\n                },\n                value: {\n                  fontSize: '16px',\n                  color: '#444444'\n                },\n              }\n        }}}}\n        series={this.props.data}\n        type='radialBar'\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '90%' : '90%'}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        {/* {this.props.inspect ? \n        <Chart\n        options={{\n          theme: {\n            mode: this.props.inspectedDataset.mode,\n            palette: this.props.inspectedDataset.palette,\n          },\n          plotOptions: {\n            bar: {\n              distributed: true\n            },\n          },\n          chart: {\n            id: this.props.inspectedDataset.title\n          },\n          xaxis: {\n            categories: this.props.inspectedDataset.dataset_series.map(entry => entry.name)\n          },\n          noData: {\n            text: 'Loading'\n          }\n        }}\n        series={[{\n          data: this.props.inspectedDataset.dataset_series.map(entry => entry.data)\n        }]}\n        type={this.props.inspectedDataset.chart_type}\n        height={this.props.inspect ? '295' : \n                this.props.quick   ? '95%' : '90%'}\n        /> */}\n        {/* : */}\n        {this.decideOnChart(this.props.chartType)}\n        \n        {/* } */}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inspectedDataset: state.dataReducer.inspectedDataset\n  }\n}\n\nexport default connect(mapStateToProps, null)(UserChart);","import React from 'react'\nimport {Spinner} from 'react-bootstrap' \nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    .loader {\n        color: rgb(42, 157, 244);\n        margin: 1rem;\n    }\n`\nconst Load = () => {\n    return (\n        <Styles>\n            <Spinner className='loader' animation='grow'/>\n            <Spinner className='loader' animation='grow' />\n            <Spinner className='loader' animation='grow' />\n        </Styles>\n    )\n}\n\nexport default Load","import React from 'react'\nimport {Table} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n    height: 100%;\n    overflow-y: scroll;\n    thead {\n        background: rgb(2, 195, 154, 0.5);\n        color: #333;\n    }\n    .table-title {\n        size: 1.25rem;\n    }\n`\n\nclass DashTable extends React.Component {\n\n    makeTableRows = (data) => {\n        let dataR = [...data].reverse()\n        return dataR.map((entry) => {\n            return (\n                <tr onClick={()=> {\n                    this.props.moveToInspect(entry)\n                }}>\n                    <td>{entry.title}</td>\n                    <td>{entry.dataset_series.length}</td>\n                    \n                    <td>{\n                    entry ? entry.notes.length : 'No Email Associated'}</td>\n                </tr>\n            )\n        })\n    }\n    render() {\n        return (\n            <Styles>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th className='table-title'>Title</th>\n                    <th className='table-title'>Data Points</th>\n                    <th className='table-title'>Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                    this.props.datasets ?\n                    this.makeTableRows(this.props.datasets)\n                    :\n                    <tr>Loading Data...</tr>}\n                </tbody>\n                </Table>\n            </Styles>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        datasets: state.dataReducer.datasets,\n        users: state.userReducer.users,\n        inspectedDataset: state.dataReducer.inspectedDataset\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        moveToInspect: (dataset) => dispatch({type: 'INSPECT', dataset: dataset})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DashTable)","import React from 'react'\nimport {connect} from 'react-redux'\nimport UserChart from './UserChart'\nimport styled from 'styled-components'\nimport { Button, Row, Col, ListGroup, Table, Form, InputGroup} from 'react-bootstrap'\n\nconst Styles = styled.div`\n    .btn-row {\n        max-height: 22vh;\n        overflow: hidden;\n        max-width: 100%;\n        margin-left: 0;\n        background: rgb(2, 195, 154, 0.5);\n    }\n    .btn-col {\n        margin-left: 0;\n        max-height: 15vh;\n        padding: 0;\n    }\n    .item {\n        height: 33%;\n        background: linear-gradient(90deg, rgba(255,255,255,0.6) 0%, rgba(255,255,255,0.0) 100%);\n        &:hover {\n            background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0.0) 100%);\n            cursor: pointer;\n            transition: 0.5s;\n        }\n    }\n    .btn-list {\n        margin-left: 0;\n        height: 16vh;\n    }\n    .panel-row {\n        width: 100%;\n        margin-left: 0;\n        height: 5vh;\n        color: #333;\n        background: rgb(2, 195, 154, 0.5);\n        animation-name: fade;\n        animation-duration: 1s;\n    }\n    .note-row {\n        width: 100%;\n        height: 24.8vh;\n        margin-left: 0;\n        background: #f7f7f7;\n        overflow-y: scroll;\n    }\n    .table-row {\n        width: 100%;\n        height: 29.8vh;\n        margin-left: 0;\n        background: #f7f7f7;\n        overflow-y: scroll;\n    }\n    @keyframes fade {\n        from {background-color: rgb(2, 195, 154, 0.0);}\n        to {background-color: rgb(2, 195, 154, 0.5);}\n    }\n    .form-row {\n        margin-left: 0;\n        height: 5vh;\n        background: #f7f7f7;\n        width:99%\n    }\n    .note-form{\n        margin-top: 0;\n    }\n    .sub-btn {\n        height: 3.8vh;\n    }\n    .note {\n        width: 100%;\n        height: 3vh;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n    }\n`\n\nclass InspectPanel extends React.Component {\n    state={\n        view: 0,\n        subject: '',\n        content: '',\n        notes: [],\n        dataset: {},\n    }\n    componentDidMount() {\n        if (this.props.inspectedDataset) {\n            this.setState({notes: [...this.props.inspectedDataset.notes]\n            })\n        }\n    }\n\n    handleInput = (value, type) => {\n        type === 1 ?\n        this.setState({subject: value}) :\n        this.setState({content: value})\n    }\n\n    createNote(subject, content) {\n        let dataId = this.props.inspectedDataset.id\n        let userId = this.props.current_user.id\n        let note = {\n            subject: subject,\n            content: content,\n            user_id: userId,\n            dataset_id: dataId\n        }\n        fetch('http://localhost:3000/notes', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(note)\n        })\n        .then(res => res.json())\n        .then(newNote => {\n            console.log(newNote)\n            this.setState({\n                subject: '',\n                content: '',\n                notes: [...this.state.notes, newNote]\n            })\n        })\n    }\n\n    renderNotes = (notes) => {\n        return (\n            notes.map(note => {\n                return (\n                    <Row className='note'>\n                        \n                        <Col>\n                            <h6>{note.subject}</h6>\n                        </Col>\n                        <Col>\n                            <h6>{note.content}</h6>\n                        </Col>\n                    </Row>\n                )\n            })\n        )\n    }\n    makeTableRows = (data) => {\n        return data.map(entry => {\n            return (\n                <tr>\n                    <td>\n                        {entry.name}\n                    </td>\n                    <td>\n                        {entry.data}\n                    </td>\n                </tr>\n            )\n        })\n    }\n    changeView = (num) => {\n        this.setState({view: num})\n    }\n\n    set = this.props.inspectedDataset\n    names = this.set.dataset_series.map((series) => {\n        return series.name\n    })\n    points = this.set.dataset_series.map((series) => {\n        return series.data\n    })\n    render() {\n        return (\n            <Styles>\n                {\n                this.state.view === 0 ?\n                <UserChart \n                palette={this.set.palette}\n                mode={this.set.mode}\n                curve={this.set.curve}\n                width={this.set.width}\n                inspect='true'\n                chartType={this.set.chart_type}\n                title={this.set.title ? this.set.title : \"Untitled-Tracker\"}\n                categories={this.names}\n                data={this.points}\n            /> \n                : this.state.view === 1 ?\n                <div>\n                <Row className='panel-row'>\n                <h3 className='mr-auto ml-auto'>Table</h3>\n                </Row>\n                <Row className='table-row'>\n                <Table bordered hover>\n                    <thead>\n                        <th>\n                            Category\n                        </th>\n                        <th>\n                            Value\n                        </th>\n                    </thead>\n                    <tbody>\n                        {\n                            this.makeTableRows(this.set.dataset_series)\n                        }\n                    </tbody>\n                </Table>\n                </Row>\n                </div>\n                :\n                <div>\n                <Row className='panel-row'>\n                    <h3 className='mr-auto ml-auto'>Notes</h3>\n                </Row>\n                <Row className='note-row'>\n                    {this.renderNotes(this.state.notes.filter((note) => {\n                        return note.dataset_id === this.props.inspectedDataset.id\n                    }))}\n                </Row>\n                <Row className='form-row'>\n                    <Form \n                    onSubmit={(e) => {\n                        e.preventDefault()\n                        this.createNote(this.state.subject, this.state.content)\n                    }}\n                    className='note-form'>\n                        <Form.Group>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>Note:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control \n                            value={this.state.subject}\n                            onChange={(e) => this.handleInput(e.target.value, 1)}\n                            className='w-30' id=\"note-Subject\" placeholder=\"Subject\" />\n                            <Form.Control\n                            value={this.state.content}\n                            onChange={(e) => this.handleInput(e.target.value, 2)} \n                            className='w-65' id=\"note-Content\" placeholder=\"Add your note\" />\n                        <Button \n                        className='sub-btn'\n                        size='sm' type='submit'>Add Note</Button>\n                        </InputGroup>\n                        \n                        </Form.Group>\n                    </Form>\n                </Row>\n                </div>\n                }\n                \n                <Row className='btn-row'>\n                    <Col \n                    className='btn-col'\n                    xs={4}>\n                        <ListGroup \n                        className='btn-list'\n                        variant='flush'>\n                            <ListGroup.Item \n                            onClick={() => {\n                                this.changeView(2)\n                            }}\n                            className='item'>\n                                Notes\n                            </ListGroup.Item>\n                            <ListGroup.Item \n                            onClick={() => {\n                                this.changeView(0)\n                            }}\n                            className='item'>\n                                Chart View\n                            </ListGroup.Item>\n                            <ListGroup.Item  \n                            onClick={() => {\n                                this.changeView(1)\n                            }}\n                            className='item'>\n                                Table View\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Styles>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // datasets: state.dataReducer.datasets,\n        users: state.userReducer.users,\n        inspectedDataset: state.dataReducer.inspectedDataset,\n        current_user: state.userReducer.current_user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        moveToInspect: (dataset) => dispatch({type: 'INSPECT', dataset: dataset}),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(InspectPanel)","import React from 'react'\nimport {connect} from 'react-redux'\nimport UserChart from './UserChart'\nimport Load from './Load'\nimport DashTable from './DashTable'\nimport InspectPanel from './InspectPanel'\nimport {Row, Col, Card} from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n    background: #ebf3f7;\n    .quick-view-row {\n        margin-top: 2vh;\n        margin-bottom: 2.4vh;\n        overflow-x: hidden;\n        height: 30vh;\n    }\n    .title-row {\n        width: 100%;\n        margin-left: 0;\n        background: #02c39a;\n        height: 5vh;\n        color: #444;\n    }\n    .filler-row {\n        width: 100%;\n        margin-left: 0;\n        text-align: center;\n        background: #02c39a;\n        height: 100%;\n        align-items: center;\n    }\n    .inspect-alt {\n        margin-left: auto; \n        margin-right: auto;\n        color: #444;\n    }\n    .title-text {\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 2rem;\n    }\n    .control-panel {\n        margin-top: 3vh;\n        border: #ddd solid 1px;\n        width: 100%;\n        height: 50vh;\n\n    }\n    .control-panel1 {\n        margin-top: 3vh;\n        border: #ddd solid 1px;\n        width: 100%;\n        height: 50vh;\n        background:linear-gradient(0deg, rgb(2, 195, 154, 0.5) 0%, rgba(255,255,255,0.0) 30%)\n    }\n    .control-panel-row {\n        height: 55vh;\n    }\n    .card {\n        text-align:center;\n        height: 20vh;\n        width: 70%;\n        margin-bottom: 2vh;\n        border: #ddd solid 1px;\n    }\n    .loader {\n        margin-top: 12vh;\n    }\n`\n\nclass Dashboard extends React.Component {\n    componentDidMount() {\n            fetch('http://localhost:3000/datasets')\n            .then(res => res.json())\n            .then(data => {\n                let filteredData = data.filter((entry) => {\n                    return entry.user_id === this.props.current_user.id\n            })\n                this.props.fetchDatasets(filteredData)\n            })\n    }\n    state={\n        inspected: '',\n        show: false,\n    }\n    renderInspected = () => {\n        if(this.props.inspectedDataset){\n            return <InspectPanel />\n        } else {\n            return <Row className='filler-row'>\n            <div className='title-text'> Click an item on the left to inspect it!</div>\n            </Row>\n        }\n    }\n    renderQuickView = (datasets) => {\n        console.log(datasets)\n        let dataR = [...datasets].reverse()\n        return dataR.map(entry => {\n\n            let names = entry.dataset_series.map((series) => {\n                return series.name\n            })\n            let points = entry.dataset_series.map((series) => {\n                return series.data\n            })\n            return (\n                <Col xs={4}>\n                    <Card \n                    className='card' >\n                        <Card.Body>\n                            <UserChart \n                            curve={entry.curve}\n                            width={entry.width}\n                            mode={entry.mode}\n                            palette={entry.palette}\n                            quick={true}\n                            chartType={entry.chart_type}\n                            title={entry.title ? entry.title : \"Untitled-Tracker\"}\n                            categories={names}\n                            data={points}\n                            /> \n                        </Card.Body>\n                    </Card>\n                </Col>\n        )})}\n\n\n    render()\n    {return (\n        <Styles>\n            <Row className='title-row' style={{ marginLeft: 0, marginRight: 0 }}>\n                <div className='title-text'>Recent Trackers</div>\n            </Row>\n            <Row \n            style={{ marginLeft: 0, marginRight: 0 }}\n            className='quick-view-row justify-content-center'>\n                \n\n            {this.props.datasets ?\n\n            this.renderQuickView(this.props.datasets)\n            \n            :   \n            <Load className='loader'/>}\n\n            </Row>\n            <Row \n            style={{ marginLeft: 0, marginRight: 0 }}\n            className='title-row'>\n                <div className='title-text'>Control Center</div>\n            </Row>\n            <Row \n            style={{ marginLeft: 0, marginRight: 0 }}\n            className='control-panel-row'>\n                <Col />\n                    <Col xs={5}>\n                        <div className='control-panel'>\n                            <DashTable />\n                        </div>\n                    </Col>\n                    <Col xs={5}>\n                        <div className='control-panel1'>\n                            { this.renderInspected()\n                            }\n                        </div>\n                    </Col>\n                <Col />\n            </Row>\n        </Styles>\n    )}\n}\nconst mapStateToProps = (state) => {\n    return {\n        datasets: state.dataReducer.datasets,\n        users: state.userReducer.users,\n        current_user: state.userReducer.current_user,\n        inspectedDataset: state.dataReducer.inspectedDataset\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchDatasets: (datasets) => dispatch({\n            type: 'FETCH_DATASETS',\n            datasets: datasets\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react'\nimport Papa from 'papaparse'\nimport {Row, Col, Form, Button, Modal, ListGroup\n    ,Card,Accordion} from 'react-bootstrap'\nimport {FaSave} from 'react-icons/fa'\nimport styled from 'styled-components'\nimport UserChart from './UserChart'\nimport Load from './Load'\nimport {connect} from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nconst Styles = styled.div`\n    background: #ebf3f7;\n    overflow: hidden;\n    .loader {\n        margin-top: 200px;\n        \n    }\n    .opt-col {\n        height: 26vh;\n        border-right: rgb(2, 195, 154, 0.2) solid 1px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .line-opt-row {\n        align-items:center;\n        justify-content: center;\n    }\n    .check-cats {\n        text-align: center;\n        justify-content: center;\n        align-items:center;\n        margin-right: auto;\n        margin-left: auto;\n    }\n    .line-opt-item {\n        font-size: 1rem;\n        margin-top: 1vh;\n    }\n    }\n    .line-opt-item1 {\n        font-size: 1rem;\n        margin-top: 1vh;\n        margin-right: 25.6vw;\n    }\n    .range-slider {\n        background: red;\n    }\n    .file-up1 {\n        cursor: pointer;\n        width: 6vw;\n        background:rgb(42, 157, 244);\n        border: rgb(42, 157, 244, 0.5) solid 1px;\n    }\n    .file-input {\n        background:rgb(42, 157, 244);\n        border: rgb(42, 157, 244, 0.5) solid 1px;\n    }\n    .file-up {\n        cursor: pointer;\n        border-radius: 10px;\n        \n        background:rgb(42, 157, 244);\n        border: rgb(42, 157, 244, 0.5) solid 1px;\n        color: #f7f7f7;\n        width: 33%;\n        position: absolute;\n        bottom: 100px;\n        right: 3.5vw;\n    }\n    .sub-btn {\n        position: absolute;\n        width: 10vw;\n        font-size: 1rem;\n        bottom: 15px;\n        right: 5vw;\n    }\n    .list-accordion {\n        color: #444;\n        border: none !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        font-size: 1.25rem;\n        &:hover {\n            background: rgb(0,0,0,0.2);\n            transition: 0.3s;\n        }\n    }\n    .accordion-item {\n        background: #ebf3f7;\n        height: 4vh;\n        cursor:pointer;\n        font-size: 1rem;\n        &:hover {\n            background: rgb(2, 195, 154, 0.2);\n            transition: 0.3s;\n        }\n    }\n    .accordion-header {\n        background: #ebf3f7;\n        cursor: pointer;\n        width: 100%;\n        border: none;\n    }\n    .accordion-card {\n        color: #444;\n        border: none;\n        background:#ebf3f7 ;\n    }\n    .option-row-drop {\n        justify-content: center;\n    }\n    .option-item {\n        background: #ebf3f7;\n        border: none;\n        border-bottom: #02c39a solid 1px;\n        color: #444;\n    }\n    .item-light {\n        background: #ebf3f7;\n        border: none;\n        font-size: 1.25rem;\n        border-bottom: #02c39a solid 1px;\n        color: #444;\n        cursor: pointer;\n        &:hover {\n            background: #444;\n            color: #ebf3f7;\n            transition: .5s;\n        }\n    }\n    .item-dark {\n        background: #444;\n        color: #ebf3f7;\n        border: none;\n        font-size: 1.25rem;\n        border-bottom: #02c39a solid 1px;\n        cursor: pointer;\n        &:hover {\n            background: #ebf3f7;\n            color: #444;\n            transition: .5s;\n        }\n    }\n    .color-text {\n        font-size: 1.25rem;\n    }\n    .title-row {\n        width: 100%;\n        margin-left: 0;\n        background: #02c39a;\n        height: 5vh;\n        text-align:center;\n        align-items:center;\n        justify-content:center;\n        color: #444;\n    }\n    .tracker-form {\n        max-width: 75%;\n        height: 100%;\n        margin-left:auto;\n        margin-right:auto;\n    }\n    .title-text {\n        margin-left: 25%;\n        font-size: 2rem;\n    }\n    .form-col {\n        background: #02c39a;\n        height: 95vh;\n        text-align: center;\n        color: #444;\n    }\n    button {\n        background: rgb(42, 157, 244);\n        \n        border: rgb(0,0,0,0.1) solid 1px;\n\n    }\n    .content-col {\n        background:black;\n        margin-left:0;\n    }\n    .preview-row {\n        background: #ebf3f7;\n        height: 50vh;\n        border-bottom: #02c39a solid 2px;\n    }\n    .remove-btn {\n        height: 3vh;\n        margin-top: 5px;\n        background: #ee3e38;\n    }\n    .options-row {\n        background: #ebf3f7;\n        height: 45vh;\n    }\n    .option-col {\n        border: black solid 0px;\n        margin-left: auto;\n        margin-right:auto;\n        height: 100%;\n        overflow-y: scroll;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n    }\n    .color-row {\n        height: 50%;\n        align-items: center;\n        justify-content: center;\n    }\n    .color-title {\n        justify-content: center;\n        color: #444;\n        font-size: 1.25rem;\n        background:rgb(2, 195, 154, 0.3);\n    }\n    .palette-list {\n        width: 100%;\n    }\n    .p-item {\n        \n        cursor: pointer;\n        background: #ebf3f7;\n        &:hover {\n            background: rgb(2, 195, 154, 0.2);\n            transition: 0.3s;\n        }\n    }\n    }\n    .color {\n        border-radius: 50%;\n        height: 20px;\n        width: 20px;\n        margin-left: 3vw;\n        margin-top: .2vh;\n        border: #f7f7f7 solid 1px;\n    }\n    .c-1{\n        background: #008FFB;\n    }\n    .c-2 {\n        background: #00e396\n    }\n    .c-3 {\n        background: #f3b019\n    }\n    .c-4 {\n        background: #ff4560\n    }\n    .c-5 {\n        background: #775dd0\n    }\n    .c-6 {\n        background: #3f51b5\n    }\n    .c-7 {\n        background: #03a9f4\n    }\n    .c-8 {\n        background: #4caf50\n    }\n    .c-9 {\n        background: #f9ce1d\n    }\n    .c-10 {\n        background: #ff9800\n    }\n    .c-11 {\n        background: #33b2df\n    }\n    .c-12{\n        background: #546e7a\n    }\n    .c-13{\n        background: #d4526e\n    }\n    .c-14{\n        background: #13d8aa\n    }\n    .c-15{\n        background: #a5978b\n    }\n    .c-16{\n        background: #4ecdc4\n    }\n    .c-17{\n        background: #c7f464\n    }\n    .c-18{\n        background: #81d4fa\n    }\n    .c-19{\n        background: #546e7a\n    }\n    .c-20{\n        background: #fd6a6a\n    }\n    .c-21{\n        background: #2b908f\n    }\n    .c-22{\n        background: #f9a3a4\n    }\n    .c-23{\n        background: #90ee7e\n    }\n    .c-24{\n        background: #fa4443\n    }\n    .c-25{\n        background: #69d2e7\n    }\n    .c-26{\n        background: #449dd1\n    }\n    .c-27{\n        background: #f86624\n    }\n    .c-28{\n        background: #ea3546\n    }\n    .c-29{\n        background: #662e9b\n    }\n    .c-30{\n        background: #c5d86d\n    }\n    .c-31{\n        background: #d7263d\n    }\n    .c-32{\n        background: #1b998b\n    }\n    .c-33{\n        background: #2e294e\n    }\n    .c-34{\n        background: #f46036\n    }\n    .c-35{\n        background: #e2c044\n    }\n    .c-36{\n        background: #662e9b\n    }\n    .c-37{\n        background: #f86624\n    }\n    .c-38{\n        background: #f9c80e\n    }\n    .c-39{\n        background: #ea3546\n    }\n    .c-40{\n        background: #43bccd\n    }\n    .c-41{\n        background: #5c4742\n    }\n    .c-42{\n        background: #a5978b\n    }\n    .c-43{\n        background: #8d5b4c\n    }\n    .c-44{\n        background: #5a2a27\n    }\n    .c-45{\n        background: #c4bbaf\n    }\n    .c-46{\n        background: #a300d6\n    }\n    .c-47{\n        background: #7d02eb\n    }\n    .c-48{\n        background: #5653fe\n    }\n    .c-49{\n        background: #2983ff\n    }\n    .c-50{\n        background: #00b1f2\n    }\n\n    .bottom-form {\n        margin-bottom: 10%;\n    }\n    .check-row {\n        background: red;\n    }\n    .form-check{\n        text-align: center;\n        margin-left: 50vh;\n    }\n    .inputfile {\n        width: 0.1px;\n        height: 0.1px;\n        opacity: 0;\n        overflow: hidden;\n        position: absolute;\n        z-index: -1;\n    }\n    .inputfile + label {\n        padding: 4px;\n        cursor: pointer;\n        position: absolute;\n        width: 10vw;\n        bottom: 10vh;\n        left: 6.4vw;\n        font-size: 1.2rem;\n        color: #f7f7f7;\n        border-radius: 5px;\n        border: rgb(0,0,0,0.1) solid 1px;\n        background: rgb(42, 157, 244);\n    }\n    \n    .inputfile:focus + label,\n    .inputfile + label:hover {\n        \n    }\n`\n\n\nclass NewTracker extends React.Component {\n    state={\n        seriesInputs: [],\n        categories: [],\n        data: [],\n        chartType: 'bar',\n        title: '',\n        name: '',\n        value: '',\n        Xaxis: '',\n        colors: [],\n        color: '#fff',\n        show: false,\n        file: [],\n        keys: [],\n        mode: 'light',\n        curve: 'straight',\n        palette: 'palette1',\n        showChart: true,\n        width: 5,\n    }\n\n    handleWidthChange = (value) => {\n        this.setState({width: value})\n    }\n    chartModeSwitch = () => {\n        if (this.state.mode === 'light') {\n            this.setState({\n                mode: 'dark'\n            })\n        } else {\n            this.setState({\n                mode: 'light'\n            })\n        }\n    }\n    setCurve = (string) => {\n        this.setState({curve: string})\n    }\n\n    handleFileUpload = (e) => {\n        Papa.parse(e.target.files[0], {\n        dynamicTyping: true, \n        header: true,\n        complete: (results) => {\n            let keys = Object.keys(results.data[0])\n            this.setState({\n                keys: keys,\n                file: results.data,\n                show: true,\n            })\n            // let firstFive = results.data.slice(0,5)\n            // firstFive.map((entry) => {\n            // let obj = {\n            //     name: entry.SchoolName,\n            //     math: entry.MathematicsMean,\n            //     reading: entry.CriticalReadingMean\n            // }\n            // this.setState({data: [...this.state.data, obj]})\n            // })\n        }\n        })\n    }\n\n    paletteChange = (choice) => {\n        this.setState({\n            palette: choice\n        })\n    }\n\n    handleClose = () => {\n        this.setState({show: !this.state.show})\n    }\n\n    pickUserKeys = (keys) => {\n        return (\n            <Modal\n            size='lg'\n            className='text-align-center justify-content-center'\n            show={this.state.show}\n            onHide={() => this.handleClose()}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Header closeButton>\n            <Modal.Title\n            className='text-align-center justify-content-center'>Please Select From The Following</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Row\n            className='text-align-center justify-content-center'><p>VisTrack found the following keys in your File.</p></Row>\n            \n            <Form\n            className='ml-auto mr-auto'>\n                    <Row\n            className='text-align-center justify-content-center'><Form.Label>Title</Form.Label></Row>\n                    <Row\n            className='text-align-center justify-content-center align-items-center'><Form.Text>Please Select Your Tracker Title</Form.Text></Row>\n                    <Form.Group>\n                    <div className='check-row'>\n                    {keys.map((key) => {\n                        return (\n                            <Form.Check \n                            name='check-title mx-auto'\n                            onChange={(e) => {\n                                this.setState({\n                                    title: e.target.id\n                                })\n                            }}\n                            multiple='false'\n                            id={key}\n                            type='radio'\n                            label={key}/>\n                        )\n                    })}\n                    </div>\n                    </Form.Group>\n                    <Row\n            className='text-align-center justify-content-center'><Form.Label>Categories</Form.Label></Row>\n                    <Row\n            className='text-align-center justify-content-center'><Form.Text>This is labels that will appear on the X-Axis</Form.Text></Row>\n                    <Form.Group>\n                    {keys.map((key) => {\n                        return (\n                            <Form.Check\n                            name='check-cats'\n                            onChange={(e) => {\n                                this.categoriesFromFile(e.target.id)\n                            }}\n                            multiple='false'\n                            id={key}\n                            type='radio'\n                            label={key}/>\n                        )\n                    })}\n                    </Form.Group>\n                    <Row\n            className='text-align-center justify-content-center'><Form.Label>Tracked Data</Form.Label></Row>\n                    <Row\n            className='text-align-center justify-content-center'><Form.Text>This is the data you wish to track</Form.Text></Row>\n                    <Form.Group>\n                    {keys.map((key) => {\n                        return (\n                            <Form.Check\n                            name='check-data'\n                            onChange={(e) => {\n                                this.setState({Xaxis: e.target.id,\n                                show:false})\n                                this.chartFromFile(e.target.id)\n                            }}\n                            multiple='false'\n                            id={key}\n                            type='radio'\n                            label={key}/>\n                        )\n                    })}\n                    </Form.Group>\n\n            </Form>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.handleClose()}>\n                Close\n            </Button>\n            </Modal.Footer>\n    </Modal>\n        )\n    }\n\n    chartFromFile = (value) => {\n        let data = this.state.file.slice(0,5).map(entry => {\n            return entry[value]\n        })\n        this.setState({data: [...data]})\n    }\n    categoriesFromFile = (value) => {\n        let cats = this.state.file.slice(0,5).map(entry => {\n            return entry[value]\n        })\n        this.setState({categories: [...cats]})\n    }\n\n    handleInput = (target, index) => {\n        let cats = [...this.state.categories]\n        let data = [...this.state.data]\n        if( target.name === \"name\") {\n            cats[index] = target.value\n            this.setState({categories: cats})\n        } else {\n            data[index] = target.value\n            this.setState({data: data})\n        }\n    }\n\n    handleTitle = (title) => {\n        this.setState({title: title})\n    }\n\n    submitTrackerForm = () => {\n        let obj = {\n            dataset: \n            {\n                title: this.state.title,\n            chart_type: this.state.chartType,\n            mode: this.state.mode,\n            palette: this.state.palette,\n            curve: this.state.curve,\n            width:this.state.width\n            },\n            name: [...this.state.categories],\n            data: [...this.state.data],\n            user_id: this.props.current_user.id\n            \n        }\n        fetch('http://localhost:3000/datasets', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(obj)\n        })\n        .then(res => res.json())\n        .then(dataset => {\n            this.props.addDataset(dataset)\n            this.props.history.push('/dashboard')\n        })\n    }\n\n    handleChartTypeChange = (value) => {\n        this.setState({\n            chartType: value,\n            showChart: false\n        },\n        () => {\n            setTimeout(() => {\n                this.setState({showChart: true})\n            }, 1000)\n        }\n        )\n}\n\n\n\n    renderFormUI = () => {\n        return this.state.categories.map((el, i) => {\n            return (\n            <Form.Row>\n            <Form.Group as={Col}>\n                <Form.Control\n                    name='name'\n                    value={el || ''}\n                    onChange={(e) => {\n                        this.handleInput(e.target, i)\n                    }}\n                    placeholder=\"Label\" />\n            </Form.Group>\n            <Form.Group as={Col}>\n                <Form.Control\n                    name='value'\n                    value={this.state.data[i]}\n                    onChange={(e) => {\n                        this.handleInput(e.target, i)\n                    }}\n                    placeholder=\"Data\" />\n                </Form.Group>\n                <Button\n                className='remove-btn'\n                variant='danger'\n                size='sm'\n                onClick={()=>{this.removeEl(i)}}>X</Button>\n            </Form.Row>\n            \n            )\n        })\n    }\n\n    removeEl = (i) => {\n        let cats = [...this.state.categories]\n        let data = [...this.state.data]\n        cats.splice(i,1)\n        data.splice(i,1)\n        this.setState({\n            categories: cats,\n            data: data\n        })\n    }\n\n    addClick(){\n        this.setState({categories: [...this.state.categories, '']})\n    }\n\n    render() {\n        return (\n            <Styles>\n                {\n                    this.state.keys ?\n                this.pickUserKeys(this.state.keys) :\n                ''}\n            <Row className='title-row'>\n                <div className='title-text'> {this.state.title ?\n                                            <>Title:  {this.state.title}</> :\n                'New Tracker'}</div>\n            </Row>\n            <Row >\n                <Col \n                xs={3}\n                className='form-col'>\n                    <Form \n                    onSubmit={(e) => {\n                        e.preventDefault()\n                        this.submitTrackerForm()}}\n                    className='tracker-form'>\n                        <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className='color-title'>Tracker Title</Form.Label>\n                        <Form.Control\n                        name\n                        value={this.state.title}\n                        onChange={(e) => {\n                            this.handleTitle(e.target.value)\n                        }}\n                        placeholder=\"Enter Title\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className='color-title'>X-Axis Title</Form.Label>\n                        <Form.Control\n                            name={this.state.Xaxis}\n                            value={this.state.Xaxis}\n                            onChange={(e) => this.setState({Xaxis: e.target.value})}\n                        placeholder=\"Enter Title\" />\n                        </Form.Group>\n                        <Button \n                        className='mb-3'\n                        onClick={(e) => {\n                            this.addClick()\n                        }} >\n                        Add Data Point\n                        </Button>\n                        \n                        {this.renderFormUI()}\n\n                        <Row className='bottom-form'>\n                        <Form.Group className='file-form-group'>\n                                <Form.Row \n                                className='justify-content-center'><Form.Label></Form.Label></Form.Row>\n                                <input type=\"file\" \n                                onChange={(e) => {\n                                    this.handleFileUpload(e)\n                                    e.preventDefault()\n\n                                }}\n                                name=\"file\" id=\"file\" class=\"inputfile\" />\n                                <label for=\"file\">Choose a file</label>\n                                {/* <Form.File\n                                className='file-up'\n                                custom\n                                >\n                                <Form.File.Input\n                                className='file-input'\n                                custom\n                                label='File Upload'\n                                onChange={e => {\n                                    this.handleFileUpload(e)\n                                    e.preventDefault()\n                                    \n                                }}/>\n                                <Form.File.Label \n                                custom\n                                className='file-up1'\n                                data-browse=\"File Upload\"></Form.File.Label>\n                                </Form.File> */}\n                            </Form.Group>\n                        <Button \n                        type='submit'\n                        className='ml-auto mr-auto mt-4 sub-btn'>\n                            <FaSave className='icon'/> Save Tracker\n                        </Button>\n                        </Row>\n                        </Form>\n\n                </Col>\n                <Col \n                xs={9}\n                className='content-col'>\n                    <Row className='preview-row'>\n                        {this.state.showChart ? \n                        <UserChart \n                        width={this.state.width}\n                        curve={this.state.curve}\n                        mode={this.state.mode}\n                        palette={this.state.palette}\n                        chartType={this.state.chartType}\n                        title={this.state.title}\n                        categories={this.state.categories}\n                        data={this.state.data}\n                        file={this.state.file} /> : \n\n                        <Load className='loader'/> }\n                    </Row>\n                    <Row className='options-row'>\n                    <Col className='option-col' xs={6}>\n                    <Row className='color-title'><div className='color-text'>Color Palette</div></Row>\n                    \n                    <Row \n                    className='color-row'>\n                    <ListGroup className='palette-list'>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette1')\n                        }}\n                        className='p-item'><Row>\n                            Palette 1 : \n                        \n                        <div className='color c-1'></div> \n                            <div className='color c-2'></div> \n                            <div className='color c-3'></div> \n                            <div className='color c-4'></div> \n                            <div className='color c-5'></div> \n                        </Row>\n\n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette2')\n                        }}\n                        className='p-item'><Row>Palette 2 : \n                            \n                            <div className='color c-6'></div> \n                            <div className='color c-7'></div> \n                            <div className='color c-8'></div> \n                            <div className='color c-9'></div> \n                            <div className='color c-10'></div> \n                            </Row>\n\n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette3')\n                        }}\n                        className='p-item'><Row>Palette 3 : \n                                <div className='color c-11'></div> \n                            <div className='color c-12'></div> \n                            <div className='color c-13'></div> \n                            <div className='color c-14'></div> \n                            <div className='color c-15'></div> </Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette4')\n                        }}\n                        className='p-item'><Row>Palette 4 : \n                        <div className='color c-16'></div> \n                            <div className='color c-17'></div> \n                            <div className='color c-18'></div> \n                            <div className='color c-19'></div> \n                            <div className='color c-20'></div> </Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette5')\n                        }}\n                        className='p-item'><Row>Palette 5 : \n                        <div className='color c-21'></div> \n                            <div className='color c-22'></div> \n                            <div className='color c-23'></div> \n                            <div className='color c-24'></div> \n                            <div className='color c-25'></div> </Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette6')\n                        }}\n                        className='p-item'><Row>Palette 6 : \n                        <div className='color c-26'></div> \n                            <div className='color c-27'></div> \n                            <div className='color c-28'></div> \n                            <div className='color c-29'></div> \n                            <div className='color c-30'></div></Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette7')\n                        }}\n                        className='p-item'><Row>Palette 7 : \n                        <div className='color c-31'></div> \n                            <div className='color c-32'></div> \n                            <div className='color c-33'></div> \n                            <div className='color c-34'></div> \n                            <div className='color c-35'></div> </Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette8')\n                        }}\n                        className='p-item'><Row>Palette 8 : \n                        <div className='color c-36'></div> \n                            <div className='color c-37'></div> \n                            <div className='color c-38'></div> \n                            <div className='color c-39'></div> \n                            <div className='color c-40'></div></Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette9')\n                        }}\n                        className='p-item'><Row>Palette 9 : \n                        <div className='color c-41'></div> \n                            <div className='color c-42'></div> \n                            <div className='color c-43'></div> \n                            <div className='color c-44'></div> \n                            <div className='color c-45'></div></Row>\n                            \n                        </ListGroup.Item>\n                        <ListGroup.Item \n                        onClick={() => {\n                            this.paletteChange('palette10')\n                        }}\n                        className='p-item'><Row>Palette 10 : \n                        <div className='color c-46'></div> \n                            <div className='color c-47'></div> \n                            <div className='color c-48'></div> \n                            <div className='color c-49'></div> \n                            <div className='color c-50'></div> </Row>\n                            \n                        </ListGroup.Item>\n                    </ListGroup>\n                    \n                    </Row>\n                    </Col>\n                    <Col className='option-col' xs={6}>\n                        <Row className='color-title'><div className='color-text'>Options</div></Row>\n                        <Row className='option-row'>\n                        <ListGroup\n                        className='palette-list'\n                        flush>\n                            <ListGroup.Item\n                            onClick={() => {\n                                this.chartModeSwitch()\n                            }}\n                            className={this.state.mode === 'light' ?\n                                                    'item-light' :\n                                                    'item-dark'}>\n                            {this.state.mode === 'light' ?\n                            <p>Activate Dark-Mode</p> :\n                            <p>Activate Light-Mode</p>}\n                            </ListGroup.Item>\n                            <ListGroup.Item\n                            className='option-item'>\n                                <Accordion \n                                className='list-accordion'\n                                defaultActiveKey=\"\">\n                                    <Card className='accordion-card'>\n                                    <Accordion.Toggle \n                                    className='accordion-header'\n                                    as={Card.Header} eventKey=\"0\">\n                                        Select Chart Type\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('bar')}}\n                                        className='accordion-item'>Bar</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('line')}}\n                                        className='accordion-item'>Line</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('area')}}\n                                        className='accordion-item'>Area</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('radar')}}\n                                        className='accordion-item'>Radar</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('pie')}}\n                                        className='accordion-item'>Pie</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('donut')}}\n                                        className='accordion-item'>Donut</Card.Body>\n                                    </Accordion.Collapse>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body \n                                        onClick={(e) => {this.handleChartTypeChange('radialBar')}}\n                                        className='accordion-item'>Radial Bar</Card.Body>\n                                    </Accordion.Collapse>\n                                    </Card>\n                                </Accordion>\n                            \n                            </ListGroup.Item>\n                        </ListGroup>\n                            {\n                        this.state.chartType === 'line'  ?\n                        <>\n                        <Col className='opt-col' xs={6}>\n                        <Row className='color-title'><h4>Line Graph Curve</h4></Row>\n                        \n                            {['straight', 'smooth', 'stepline'].map((entry) =>{\n                                return(\n                                    <Row className='line-opt-row ml-auto mr-auto'>\n                                    <Form.Check\n                                    className='line-opt-item1'\n                                    type='radio'\n                                    name='line-type'\n                                    onChange={() => {this.setCurve(entry)}}\n                                    label={entry.charAt(0).toUpperCase() + entry.slice(1)}/>\n                                    </Row>\n                                )\n                            })}\n                        \n                    </Col>\n                    <Col className='opt-col' xs={6}>\n                        <Row className='color-title'><h4>Line Width</h4></Row>\n                        <Row className='line-opt-row'>\n                        <Form>\n                        <Form.Group controlId=\"formBasicRange\">\n                        <Form.Label className='line-opt-item'>Change your line width</Form.Label>\n                        <Form.Control \n                        className='range-slider'\n                        defaultValue={4}\n                        onChange={(e) => this.handleWidthChange(e.target.value)}\n                        type=\"range\" />\n                        </Form.Group>\n                        </Form>\n                        </Row>\n                    </Col>\n                    </> : \n                    <></>}\n                        </Row>\n                    </Col>\n\n                    </Row>\n                </Col>\n            </Row>\n            </Styles>\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addDataset: (dataset) => dispatch({type: 'ADD_DATASET', dataset: dataset})\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        current_user: state.userReducer.current_user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewTracker))","import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Row, Col} from 'react-bootstrap'\nimport SideNav from './components/SideNav'\nimport Home from './components/Home'\nimport VisTeams from './components/VisTeams'\nimport Explore from './components/Explore'\nimport SignUp from './components/SignUp'\nimport Login from './components/Login'\nimport Dashboard from './components/Dashboard'\nimport NewTracker from './components/NewTracker'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n\nfont-family: 'Roboto', sans-serif;\n`\nclass App extends React.Component {\n  state={\n    showNav: true\n  }\n  componentWillMount() {\n    localStorage.getItem('user') ?\n\n      fetch(`http://localhost:3000/users/${localStorage.getItem('user')}`)\n      .then(res => res.json())\n      .then(user => {\n        this.props.setLoggedIn(user)\n      })\n        :\n      console.log('log in to continue')\n  }\n  componentDidMount() {\n    this.getUsers()\n    this.getDataSets()\n  }\n\n  getUsers = () => {\n    fetch('http://localhost:3000/users')\n    .then(res => res.json())\n    .then(userData => {\n      this.props.fetchUsers(userData)\n      console.log(this.props.users)\n    })\n  }\n  getDataSets = () => {\n    if (this.props.current_user) {\n      fetch('http://localhost:3000/datasets')\n      .then(res => res.json())\n      .then(data => {\n        let filteredData = data.filter((entry) => {\n          return entry.user_id === this.props.current_user.id\n        })\n        filteredData.reverse()\n          this.props.fetchDatasets(filteredData)\n      })\n    }\n  }\n  \n  render() {\n    return (\n      <Styles>\n        <Router>\n        <Row style={{ marginLeft: 0, marginRight: 0 }}>\n          \n          <Col xs={2} style={{\n            paddingRight: 0, \n            paddingLeft: 0,\n            marginLeft: 0,\n            }}>\n          <SideNav />\n          </Col>\n          <Col xs={10} style={{paddingRight: 0, paddingLeft: 0}}>\n          \n                <Switch>\n                    <Route exact path='/'>\n                        <Home />\n                    </Route>\n                    <Route exact path='/signup'>\n                        <SignUp/>\n                    </Route>\n                    <Route exact path='/login'>\n                        <Login/>\n                    </Route>\n                    <Route exact path='/explore'>\n                        <Explore/>\n                    </Route>\n                    <Route exact path='/dashboard'>\n                        <Dashboard \n                        current_user={this.props.current_user}/>\n                    </Route>\n                    <Route exact path='/visteams'>\n                        <VisTeams />\n                    </Route>\n                    <Route path='/newtracker'>\n                      <NewTracker/>\n                    </Route>\n                </Switch>\n            \n          </Col>\n      </Row>\n      </Router>\n      </Styles>\n\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (users) => dispatch({ type: 'FETCH_USERS', users: users }),\n    setLoggedIn: (user) => dispatch({type: 'SET_LOGIN', user: user}),\n    fetchDatasets: (datasets) => dispatch({type: 'FETCH_DATASETS', datasets: datasets})\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    current_user: state.userReducer.current_user,\n    users: state.userReducer.users,\n    isLoggedIn: state.userReducer.isLoggedIn,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux'\nimport userReducer from './userReducer'\nimport dataReducer from './dataReducer'\n\nexport default combineReducers({\n    userReducer: userReducer,\n    dataReducer: dataReducer\n})","import { FETCH_USERS, LOGIN, CREATE_USER } from '../actions/types'\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        \n        case FETCH_USERS:\n            return {\n                ...state,\n                users: action.users\n            }\n        case LOGIN:\n            console.log(action.user)\n            return {\n                ...state,\n                isLoggedIn: true,\n                current_user: action.user\n            }\n        case 'SET_LOGIN':\n            return {\n                ...state,\n                isLoggedIn: true,\n                current_user: action.user\n            }\n        case 'LOGOUT':\n            console.log('logout')\n            localStorage.clear()\n            return {\n                ...state,\n                isLoggedIn: false,\n                current_user: {}\n            }\n        case CREATE_USER:\n            return {\n                ...state,\n                isLoggedIn: true,\n                current_user: action.user\n            }\n        default:\n            return state;\n    }\n}","export const FETCH_USERS = 'FETCH_USERS'\nexport const NEW_USER = 'NEW_USER'\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const CREATE_USER = 'CREATE_USER'","export default (state = {}, action) => {\n    switch (action.type) {\n        \n        case 'FETCH_DATASETS':\n            return {\n                ...state,\n                datasets: action.datasets\n            }\n        case 'ADD_DATASET':\n            if(!state.datasets) {\n                return {\n                    ...state,\n                    datasets: [action.dataset]\n                }\n            } else {\n                return {\n                    ...state,\n                    datasets: [...state.datasets, action.dataset]\n                }\n            }\n            \n        // case LOGOUT:\n        //     return (\n\n        //     )\n        case 'INSPECT':\n            console.log('inspect')\n            return {\n                ...state,\n                inspectedDataset: action.dataset\n            }\n        default:\n            return state;\n    }\n}","import { createStore} from 'redux'\nimport rootReducer from './reducers'\n\n\nconst store = createStore(\n    rootReducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}